function t(t){const e=typeof t;if("function"!==e)throw new TypeError(`The "listener" argument must be of type Function. Received type ${e}`)}class e{constructor(){this._events={}}on(e,s,n=!1){t(s),this._events[e]||(this._events[e]=[]);const i=this._events[e];return n?i.unshift(s):i.push(s),this}off(e,s){const n=this._events[e];return n?(s?(t(s),this._events[e]=n.filter((t=>t!==s))):this._events[e]=[],this):this}once(e,s,n=!1){t(s);const i=(...t)=>{this.off(e,i),s.apply(this,t)};return this.on(e,i,n)}emit(t,...e){const s=this._events[t];return!(!s||!s.length)&&(s.forEach((t=>{t.apply(this,e)})),!0)}}export{e as default};
//# sourceMappingURL=events.esm.min.js.map

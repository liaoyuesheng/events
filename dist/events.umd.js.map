{"version":3,"file":"events.umd.js","sources":["../src/index.ts"],"sourcesContent":["type Listener = (...args:any[]) => void\r\n\r\ntype Listeners = Listener[]\r\n\r\ninterface EventsObject {\r\n  [key: string]: Listeners\r\n}\r\n\r\nfunction checkListener(listener) {\r\n  const listenerType = typeof listener\r\n\r\n  if (listenerType !== 'function') {\r\n    throw new TypeError(`The \"listener\" argument must be of type Function. Received type ${listenerType}`)\r\n  }\r\n}\r\n\r\nexport default class Events {\r\n  private _events: EventsObject = {}\r\n\r\n  public on(eventName: string, listener: Listener, prepend = false): Events {\r\n    checkListener(listener)\r\n\r\n    if (!this._events[eventName]) {\r\n      this._events[eventName] = []\r\n    }\r\n\r\n    const listeners = this._events[eventName]\r\n\r\n    if (prepend) {\r\n      listeners.unshift(listener)\r\n    } else {\r\n      listeners.push(listener)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  public off(eventName: string, listener?: Listener): Events {\r\n    const listeners = this._events[eventName]\r\n\r\n    if (!listeners) return this\r\n\r\n    if (listener) {\r\n      checkListener(listener)\r\n\r\n      this._events[eventName] = listeners.filter((currentListener) => {\r\n        return currentListener !== listener\r\n      })\r\n    } else {\r\n      this._events[eventName] = []\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  public once(eventName: string, listener: Listener, prepend = false): Events {\r\n    checkListener(listener)\r\n\r\n    const proxyListener = (...args) => {\r\n      this.off(eventName, proxyListener)\r\n      listener.apply(this, args)\r\n    }\r\n\r\n    return this.on(eventName, proxyListener, prepend)\r\n  }\r\n\r\n  public emit(eventName: string, ...args: any[]): boolean {\r\n    const listeners = this._events[eventName]\r\n\r\n    if (!listeners || !listeners.length) {\r\n      return false\r\n    }\r\n\r\n    listeners.forEach((listener) => {\r\n      listener.apply(this, args)\r\n    })\r\n\r\n    return true\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAQA,SAAS,aAAa,CAAC,QAAQ;QAC7B,MAAM,YAAY,GAAG,OAAO,QAAQ,CAAA;QAEpC,IAAI,YAAY,KAAK,UAAU,EAAE;YAC/B,MAAM,IAAI,SAAS,CAAC,mEAAmE,YAAY,EAAE,CAAC,CAAA;SACvG;IACH,CAAC;UAEoB,MAAM;QAA3B;YACU,YAAO,GAAiB,EAAE,CAAA;SA8DnC;QA5DQ,EAAE,CAAC,SAAiB,EAAE,QAAkB,EAAE,OAAO,GAAG,KAAK;YAC9D,aAAa,CAAC,QAAQ,CAAC,CAAA;YAEvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAA;aAC7B;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;YAEzC,IAAI,OAAO,EAAE;gBACX,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;aAC5B;iBAAM;gBACL,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;aACzB;YAED,OAAO,IAAI,CAAA;SACZ;QAEM,GAAG,CAAC,SAAiB,EAAE,QAAmB;YAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;YAEzC,IAAI,CAAC,SAAS;gBAAE,OAAO,IAAI,CAAA;YAE3B,IAAI,QAAQ,EAAE;gBACZ,aAAa,CAAC,QAAQ,CAAC,CAAA;gBAEvB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,eAAe;oBACzD,OAAO,eAAe,KAAK,QAAQ,CAAA;iBACpC,CAAC,CAAA;aACH;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAA;aAC7B;YAED,OAAO,IAAI,CAAA;SACZ;QAEM,IAAI,CAAC,SAAiB,EAAE,QAAkB,EAAE,OAAO,GAAG,KAAK;YAChE,aAAa,CAAC,QAAQ,CAAC,CAAA;YAEvB,MAAM,aAAa,GAAG,CAAC,GAAG,IAAI;gBAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;gBAClC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;aAC3B,CAAA;YAED,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,CAAC,CAAA;SAClD;QAEM,IAAI,CAAC,SAAiB,EAAE,GAAG,IAAW;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;YAEzC,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnC,OAAO,KAAK,CAAA;aACb;YAED,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ;gBACzB,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;aAC3B,CAAC,CAAA;YAEF,OAAO,IAAI,CAAA;SACZ;;;;;;;;;"}